
import 'package:flutter/material.dart';
import '../pages/homePage.dart';
import '../pages/homePageWithWidgets.dart';
import '../pages/player_screen.dart';
import '../pages/surahListPage.dart';
import '../routes/drawer_routes.dart';
import 'package:flutter/services.dart';

import 'package:firebase_analytics/firebase_analytics.dart';
import 'package:firebase_core/firebase_core.dart';

import '/firebase_options.dart'; // this file is generated by "flutterfire config" command
import 'package:firebase_messaging/firebase_messaging.dart';

import 'dart:async';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();
//SystemChrome.setPreferredOrientations([DeviceOrientation.portraitUp]).then((_){
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  FirebaseMessaging messaging = FirebaseMessaging.instance;

  NotificationSettings settings = await messaging.requestPermission(
    alert: true,
    announcement: false,
    badge: true,
    carPlay: false,
    criticalAlert: false,
    provisional: false,
    sound: true,
  );

  print('User granted permission: ${settings.authorizationStatus}');

// Lisitnening to the background messages
  WidgetsFlutterBinding.ensureInitialized();
  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);

// Listneing to the foreground messages
  WidgetsFlutterBinding.ensureInitialized();
  FirebaseMessaging.onMessage.listen((RemoteMessage event) {
    print("message recieved");
    print(event.notification!.body);
  });
  FirebaseMessaging.onMessageOpenedApp.listen((message) {
    print('Message clicked!');
  });

  runApp(MyApp());
}

Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {
  await Firebase.initializeApp();
}

class SplashPage extends StatefulWidget {
  @override
  SplashPageState createState() => SplashPageState();
}

class SplashPageState extends State<SplashPage> {
// THIS FUNCTION WILL NAVIGATE FROM SPLASH SCREEN TO HOME SCREEN.    // USING NAVIGATOR CLASS.
//   FirebaseMessaging messaging;

  void navigationToNextPage() {
    Navigator.pushReplacementNamed(context, '/homePageWithWidgets');
  }

  startSplashScreenTimer() async {
    var _duration = new Duration(seconds: 3);
    return Timer(_duration, navigationToNextPage);
  }

// It is assumed that all messages contain a data field with the key 'type'
//   Future<void> setupInteractedMessage() async {
//     // Get any messages which caused the application to open from
//     // a terminated state.
//     RemoteMessage initialMessage =
//     await FirebaseMessaging.instance.getInitialMessage();
//
//     // If the message also contains a data property with a "type" of "chat",
//     // navigate to a chat screen
//     if (initialMessage != null) {
//       _handleMessage(initialMessage);
//     }
//     FirebaseMessaging.onMessage.listen((RemoteMessage event) {
//       print("message recieved");
//       print(event.notification.body);
//     });
//     // Also handle any interaction when the app is in the background via a
//     // Stream listener
//     FirebaseMessaging.onMessageOpenedApp.listen(_handleMessage);
//   }
//
//   void _handleMessage(RemoteMessage message) {
//     navigationToNextPage();
//     if (message.data['type'] == 'chat') {
//       // Navigator.pushNamed(context, '/chat',
//       //   arguments: ChatArguments(message),
//       // );
//     }
//   }
  @override
  void initState() {
    super.initState();
    // FirebaseMessaging messaging = FirebaseMessaging.instance;
    // messaging.getToken().then((value) {
    //   print('Message is here: ${value}');
    // });
    startSplashScreenTimer();
  }

  @override
  void dispose() {
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
// To make this screen full screen.
// It will hide status bar and notch.
//    SystemChrome.setEnabledSystemUIOverlays([]);
    Size size = MediaQuery.of(context).size;
// full screen image for splash screen.
//    return Container(
//      color: Colors.white,
//      padding: const EdgeInsets.all(25),
//        child: Image.asset("lib/images/khuddamLogo.jpeg"));
    return Column(
      children: [
//      Padding(padding: EdgeInsets.symmetric(vertical: 40)),
//      /*Image.asset("lib/images/khuddamLogo.jpeg",
//                  width: 250, height: 250, fit: BoxFit.fill),*/
        Container(
            color: Colors.white,
            alignment: Alignment.center,
            width: size.width,
            height: size.height * 0.92,
            child: Image.asset("lib/images/khuddamLogo.jpeg")),
        Container(
          color: Colors.white,
          alignment: Alignment.center,
          width: size.width,
          height: MediaQuery.of(context).size.height * 0.08,
          padding: EdgeInsets.only(left: 5, top: 0, right: 5, bottom: 0),
          child: Text("Designed & Developed by Saad Mansur for Sadaqah Jariyah",
              style: TextStyle(
                  backgroundColor: Colors.white,
                  fontWeight: FontWeight.bold,
                  fontSize: 12.0,
                  decoration: TextDecoration.none,
                  color: Colors.black)),
        ),
      ],
    );
  }
}

class MyApp extends StatelessWidget {
  static FirebaseAnalytics analytics = FirebaseAnalytics.instance;
  static FirebaseAnalyticsObserver observer =
      FirebaseAnalyticsObserver(analytics: analytics);

// This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return new MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'NavigationDrawer Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      navigatorObservers: <NavigatorObserver>[observer],
      home: SplashPage(),
      routes: {
        drawer_routes.home: (context) => homePageWithWidgets(),
//        drawer_routes.contact: (context) => YoutubePlayerDemo(title: 'Youtube Player'),
        drawer_routes.surahList: (context) => surahListPage(),
//        pageRoutes.profile: (context) => profilePage(),
//        pageRoutes.notification: (context) => notificationPage(),
      },
    );
  }
}
